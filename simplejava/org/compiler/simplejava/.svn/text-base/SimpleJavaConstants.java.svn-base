/* Generated By:JavaCC: Do not edit this line. SimpleJavaConstants.java */
package org.compiler.simplejava;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SimpleJavaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 13;
  /** RegularExpression Id. */
  int DO = 14;
  /** RegularExpression Id. */
  int IF = 15;
  /** RegularExpression Id. */
  int ELSE = 16;
  /** RegularExpression Id. */
  int FALSE = 17;
  /** RegularExpression Id. */
  int FOR = 18;
  /** RegularExpression Id. */
  int RETURN = 19;
  /** RegularExpression Id. */
  int TRUE = 20;
  /** RegularExpression Id. */
  int WHILE = 21;
  /** RegularExpression Id. */
  int NEW = 22;
  /** RegularExpression Id. */
  int PLUS = 23;
  /** RegularExpression Id. */
  int MINUS = 24;
  /** RegularExpression Id. */
  int MULTIPLY = 25;
  /** RegularExpression Id. */
  int DIVIDE = 26;
  /** RegularExpression Id. */
  int INCREMENT = 27;
  /** RegularExpression Id. */
  int DECREMENT = 28;
  /** RegularExpression Id. */
  int LEFT_BRACKET = 29;
  /** RegularExpression Id. */
  int RIGHT_BRACKET = 30;
  /** RegularExpression Id. */
  int LEFT_BRACE = 31;
  /** RegularExpression Id. */
  int RIGHT_BRACE = 32;
  /** RegularExpression Id. */
  int LEFT_PARENTHESIS = 33;
  /** RegularExpression Id. */
  int RIGHT_PARENTHESIS = 34;
  /** RegularExpression Id. */
  int DOT = 35;
  /** RegularExpression Id. */
  int COMMA = 36;
  /** RegularExpression Id. */
  int SEMICOLON = 37;
  /** RegularExpression Id. */
  int EQUAL = 38;
  /** RegularExpression Id. */
  int NOT_EQUAL = 39;
  /** RegularExpression Id. */
  int LESS_THAN = 40;
  /** RegularExpression Id. */
  int GREATER_THAN = 41;
  /** RegularExpression Id. */
  int LESS_THAN_OR_EQUAL = 42;
  /** RegularExpression Id. */
  int GREATER_THAN_OR_EQUAL = 43;
  /** RegularExpression Id. */
  int GETS = 44;
  /** RegularExpression Id. */
  int AND = 45;
  /** RegularExpression Id. */
  int OR = 46;
  /** RegularExpression Id. */
  int NOT = 47;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 48;
  /** RegularExpression Id. */
  int IDENTIFIER = 49;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int OUTER_COMMENT = 1;
  /** Lexical state. */
  int INNER_COMMENT = 2;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 5>",
    "\"/*\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 9>",
    "\"*/\"",
    "\"/*\"",
    "<token of kind 12>",
    "\"class\"",
    "\"do\"",
    "\"if\"",
    "\"else\"",
    "\"false\"",
    "\"for\"",
    "\"return\"",
    "\"true\"",
    "\"while\"",
    "\"new\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"++\"",
    "\"--\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\".\"",
    "\",\"",
    "\";\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"=\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "<INTEGER_LITERAL>",
    "<IDENTIFIER>",
  };

}
